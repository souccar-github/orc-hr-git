<?xml version="1.0" encoding="utf-8"?>
<DataSchemaModel FileFormatVersion="1.2" SchemaVersion="2.9" DspName="Microsoft.Data.Tools.Schema.Sql.Sql130DatabaseSchemaProvider" CollationLcid="1033" CollationCaseSensitive="False" xmlns="http://schemas.microsoft.com/sqlserver/dac/Serialization/2012/02">
	<Header>
		<CustomData Category="AnsiNulls">
			<Metadata Name="AnsiNulls" Value="True" />
		</CustomData>
		<CustomData Category="QuotedIdentifier">
			<Metadata Name="QuotedIdentifier" Value="True" />
		</CustomData>
		<CustomData Category="CompatibilityMode">
			<Metadata Name="CompatibilityMode" Value="130" />
		</CustomData>
		<CustomData Category="Reference" Type="Assembly">
			<Metadata Name="LogicalName" Value="DBScripts.dll" />
			<Metadata Name="FileName" Value="C:\USERS\ALI\SOURCE\REPOS\ORC-HR-GIT\DBSCRIPTS\OBJ\DEBUG\DBSCRIPTS.DLL" />
			<Metadata Name="AssemblyName" Value="DBScripts" />
			<Metadata Name="PermissionSet" Value="SAFE" />
			<Metadata Name="Owner" Value="" />
			<Metadata Name="GenerateSqlClrDdl" Value="True" />
			<Metadata Name="IsVisible" Value="True" />
			<Metadata Name="IsModelAware" Value="True" />
			<Metadata Name="SkipCreationIfEmpty" Value="True" />
			<Metadata Name="AssemblySymbolsName" Value="C:\Users\Ali\source\repos\orc-hr-git\DBScripts\obj\Debug\DBScripts.pdb" />
		</CustomData>
		<CustomData Category="SqlCmdVariables" Type="SqlCmdVariable" />
	</Header>
	<Model>
		<Element Type="SqlDatabaseOptions">
			<Property Name="Collation" Value="SQL_Latin1_General_CP1_CI_AS" />
			<Property Name="IsAnsiNullDefaultOn" Value="True" />
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Property Name="IsAnsiWarningsOn" Value="True" />
			<Property Name="IsArithAbortOn" Value="True" />
			<Property Name="IsConcatNullYieldsNullOn" Value="True" />
			<Property Name="IsTornPageProtectionOn" Value="False" />
			<Property Name="IsFullTextEnabled" Value="True" />
			<Property Name="PageVerifyMode" Value="3" />
			<Property Name="DefaultLanguage" Value="" />
			<Property Name="DefaultFullTextLanguage" Value="" />
			<Property Name="QueryStoreStaleQueryThreshold" Value="367" />
			<Relationship Name="DefaultFilegroup">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[PRIMARY]" />
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlScalarFunction" Name="[dbo].[GetNodeOfEmployee]">
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[GetNodeOfEmployee].[@employeeId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GetNodeOfEmployee].[@positionTmp].[nodeId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GetNodeOfEmployee].[@positionTmp].[isPrimary]" />
				</Entry>
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[GetNodeOfEmployee].[@positionTmp]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[GetNodeOfEmployee].[@positionTmp].[positionId]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[GetNodeOfEmployee].[@positionTmp].[nodeId]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[int]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[GetNodeOfEmployee].[@positionTmp].[isPrimary]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[bit]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlSimpleColumn" Name="[dbo].[GetNodeOfEmployee].[@positionTmp].[datePos]">
									<Relationship Name="TypeSpecifier">
										<Entry>
											<Element Type="SqlTypeSpecifier">
												<Relationship Name="Type">
													<Entry>
														<References ExternalSource="BuiltIns" Name="[date]" />
													</Entry>
												</Relationship>
											</Element>
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="FunctionBody">
				<Entry>
					<Element Type="SqlScriptFunctionImplementation">
						<Property Name="BodyScript">
							<Value><![CDATA[    
begin  
 DECLARE @positionTmp table (positionId int, nodeId int, isPrimary bit, datePos Date)  
  insert @positionTmp  
select assign.Position_Id, nodeTable.Id, assign.IsPrimary, assign.CreationDate from   
AssigningEmployeeToPosition assign inner join   
Position pos on assign.Position_Id = pos.Id inner join   
JobDescription jobDesc on pos.JobDescription_id = jobDesc.Id inner join   
Node nodeTable on jobDesc.Node_id = nodeTable.Id inner join   
Employee emp on assign.Employee_id = emp.Id   
where emp.Id = @employeeId  
  
IF (select count(1) from @positionTmp) > 1  
   return (select top(1) nodeId from @positionTmp where isPrimary = 0 order by 1 desc);  
ELSE  
BEGIN  
   IF  (select count(1) from @positionTmp) = 1  
       return (select top(1) nodeId from @positionTmp where isPrimary = 1 order by 1 desc);  
   ELSE  
      return null;  
END;  
      return null;  
end]]></Value>
						</Property>
						<Annotation Type="SysCommentsObjectAnnotation">
							<Property Name="Length" Value="1007" />
							<Property Name="StartLine" Value="1" />
							<Property Name="StartColumn" Value="1" />
							<Property Name="HeaderContents" Value="create function GetNodeOfEmployee    &#xD;&#xA;(    &#xD;&#xA;   @employeeId int  &#xD;&#xA;)    &#xD;&#xA;returns int    &#xD;&#xA;as" />
						</Annotation>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[GetNodeOfEmployee].[@employeeId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Relationship Name="Type">
				<Entry>
					<Element Type="SqlTypeSpecifier">
						<Relationship Name="Type">
							<Entry>
								<References ExternalSource="BuiltIns" Name="[int]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
		</Element>
		<Element Type="SqlProcedure" Name="[dbo].[UpdateDailyRecordsFromAttendance]">
			<Property Name="BodyScript">
				<Value><![CDATA[
Begin
select dailyRecords.Date as [Date], dailyRecords.Employee_id as employeeId, 
EmpCard.Id as EmpCardId, dailyRecords.Id as dailyRecordId, details.Id as detailId,
details.AttendanceWithoutAdjustment_id as attendanceRecordId into #recordsTmp
from DailyEnternaceExitRecord dailyRecords with (nolock) 
inner join EmployeeCard EmpCard with  (nolock)
on dailyRecords.Employee_id = EmpCard.Employee_id
inner join AttendanceWithoutAdjustment attendance with  (nolock)
on EmpCard.Id = attendance.EmployeeAttendanceCard_id
inner join AttendanceWithoutAdjustmentDetail details with  (nolock)
on attendance.Id = details.AttendanceWithoutAdjustment_id
and details.Date  = dailyRecords.Date
where dailyRecords.IsVertualDeleted = 0 and
EmpCard.IsVertualDeleted = 0 and
attendance.IsVertualDeleted = 0 and
details.IsVertualDeleted = 0
and attendance.AttendanceRecord_id = @attendanceRecordId

select detail.Date as [Date], attendance.EmployeeAttendanceCard_id as empCardId, 
detail.Id as dailyRecordId, detail.Id as detailId,
detail.AttendanceWithoutAdjustment_id as attendanceRecordId,
detail.HasMission as HasMission,
detail.HasVacation as HasVacation,
Round(detail.NonAttendanceHoursValue,2) as AbsentHoursValue,
Round(detail.LatenessHoursValue, 2) as LateHoursValue,
Round(detail.MissionValue, 2) as MissionValue,
 Round(detail.VacationValue, 2) as VacationValue,
 Round(detail.HolidayOvertimeValue, 2) as HolidayOvertimeHoursValue,
Round(detail.ActualWorkValue, 2) as WorkHoursValue,
 Round(detail.RequiredWorkHoursValue, 2) as RequiredWorkHours,
 1 as IsCalculated,
         Round(
		 detail.OvertimeOrderValue + 
		 detail.NormalOvertimeValue +
		 detail.ParticularOvertimeValue + 
		 detail.ExpectedOvertimeValue +
		 detail.HolidayOvertimeValue, 2) as OvertimeHoursValue
,
CASE
    WHEN detail.LatenessHoursValue > 0 then 3
    ELSE 0 
END as LateType,
CASE
    WHEN (detail.ActualWorkValue <= 0 or detail.RequiredWorkHoursValue - detail.ActualWorkValue > 0)
	and detail.IsOffDay = 0 and detail.IsHoliday = 1  then 3
    ELSE 0
END as AbsenseType,
 detail.DayOfWeek as [day],
CASE
    WHEN detail.IsHoliday = 1 or detail.IsOffDay = 1 THEN 4  
    WHEN detail.HasVacation = 1 and detail.VacationValue >= detail.RequiredWorkHoursValue THEN 2
    WHEN detail.HasMission = 1 and detail.MissionValue >= detail.RequiredWorkHoursValue THEN 3
    WHEN detail.LatenessHoursValue > 0 then 1
    WHEN detail.ActualWorkValue <= 0 and detail.IsOffDay = 0 
	and detail.IsHoliday = 0 and detail.HasVacation = 0 
	and detail.HasMission = 0  then 1
	ELSE 1
END as [status]
 into #detailsTmp
from AttendanceWithoutAdjustment attendance with  (nolock)
inner join AttendanceWithoutAdjustmentDetail detail with  (nolock)
on attendance.Id = detail.AttendanceWithoutAdjustment_id
where
attendance.IsVertualDeleted = 0 and
detail.IsVertualDeleted = 0
and attendance.AttendanceRecord_id = @attendanceRecordId
and detail.Date not in (select Date from #recordsTmp)


---
update DailyEnternaceExitRecord set 
DailyEnternaceExitRecord.HasMission = detail.HasMission,
DailyEnternaceExitRecord.HasVacation = detail.HasVacation,
DailyEnternaceExitRecord.AbsentHoursValue = Round(detail.NonAttendanceHoursValue,2),
DailyEnternaceExitRecord.LateHoursValue = Round(detail.LatenessHoursValue, 2),
DailyEnternaceExitRecord.MissionValue = Round(detail.MissionValue, 2),
DailyEnternaceExitRecord.VacationValue = Round(detail.VacationValue, 2),
DailyEnternaceExitRecord.HolidayOvertimeHoursValue = Round(detail.HolidayOvertimeValue, 2),
DailyEnternaceExitRecord.WorkHoursValue = Round(detail.ActualWorkValue, 2),
DailyEnternaceExitRecord.RequiredWorkHours = Round(detail.RequiredWorkHoursValue, 2),
DailyEnternaceExitRecord.IsCalculated = 1,
DailyEnternaceExitRecord.OvertimeHoursValue = 
         Round(
		 detail.OvertimeOrderValue + 
		 detail.NormalOvertimeValue +
		 detail.ParticularOvertimeValue + 
		 detail.ExpectedOvertimeValue +
		 detail.HolidayOvertimeValue, 2)
,
DailyEnternaceExitRecord.LateType = 
CASE
    WHEN detail.LatenessHoursValue > 0 then 3
    ELSE 0
END ,
DailyEnternaceExitRecord.AbsenseType = 
CASE
    WHEN (detail.ActualWorkValue <= 0 or detail.RequiredWorkHoursValue - detail.ActualWorkValue > 0)
	and detail.IsOffDay = 0 and detail.IsHoliday = 1  then 3
    ELSE 0
END,
DailyEnternaceExitRecord.Day = detail.DayOfWeek,
DailyEnternaceExitRecord.Status = 
CASE
    WHEN detail.IsHoliday = 1 or detail.IsOffDay = 1 THEN 4  
    WHEN detail.HasVacation = 1 and detail.VacationValue >= detail.RequiredWorkHoursValue THEN 2
    WHEN detail.HasMission = 1 and detail.MissionValue >= detail.RequiredWorkHoursValue THEN 3
    WHEN detail.LatenessHoursValue > 0 then 1
    WHEN detail.ActualWorkValue <= 0 and detail.IsOffDay = 0 
	and detail.IsHoliday = 0 and detail.HasVacation = 0 
	and detail.HasMission = 0  then 1
	ELSE 1
END 
FROM
    DailyEnternaceExitRecord DailyEntrExitRecords
INNER JOIN
    #detailsTmp tmp on DailyEntrExitRecords.Id = tmp.dailyRecordId
	
INNER JOIN
    AttendanceWithoutAdjustmentDetail detail on tmp.detailId = detail.Id


Insert into DailyEnternaceExitRecord
(AbsenseType, AbsentHoursValue, Date, Day, Employee_id, HasMission, HasVacation, HolidayOvertimeHoursValue
,InsertSource, IsCalculated, IsClosed, LateHoursValue , LateType, MissionValue
, Node_id, Note, OvertimeHoursValue, RequiredWorkHours, Status,WorkHoursValue,
 VacationValue, IsVertualDeleted)

select details.AbsenseType, details.AbsentHoursValue, details.Date, details.day, empCard.Employee_id,
details.HasMission, details.HasVacation, details.HolidayOvertimeHoursValue,
0, 1, 0, details.LateHoursValue, details.LateType, details.MissionValue,
(select dbo.GetNodeOfEmployee(empCard.Employee_id)), '', details.OvertimeHoursValue,
details.RequiredWorkHours, details.status, details.WorkHoursValue,
 details.VacationValue, 0
from #detailsTmp details inner join 
EmployeeCard empCard on details.empCardId = empCard.Id 
 

 drop table #recordsTmp

 drop table #detailsTmp;
 IF OBJECT_ID('Hamwi..@positionTmp') IS NOT NULL DROP TABLE positionTmp

 End]]></Value>
			</Property>
			<Property Name="IsAnsiNullsOn" Value="True" />
			<Relationship Name="BodyDependencies">
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[@attendanceRecordId]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#recordsTmp]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#recordsTmp].[Date]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[dailyRecordId]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[detailId]" />
				</Entry>
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry />
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[empCardId]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[AbsenseType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[AbsentHoursValue]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[Date]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[day]" />
				</Entry>
				<Entry />
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[HasMission]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[HasVacation]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[HolidayOvertimeHoursValue]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[LateHoursValue]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[LateType]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[MissionValue]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[GetNodeOfEmployee]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[OvertimeHoursValue]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[RequiredWorkHours]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[status]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[WorkHoursValue]" />
				</Entry>
				<Entry>
					<References Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[VacationValue]" />
				</Entry>
				<Entry />
			</Relationship>
			<Relationship Name="DynamicObjects">
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#recordsTmp]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#recordsTmp].[Date]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#recordsTmp].[employeeId]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#recordsTmp].[EmpCardId]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#recordsTmp].[dailyRecordId]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#recordsTmp].[detailId]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#recordsTmp].[attendanceRecordId]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
				<Entry>
					<Element Type="SqlDynamicColumnSource" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp]">
						<Relationship Name="Columns">
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[Date]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[empCardId]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[dailyRecordId]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[detailId]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[attendanceRecordId]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[HasMission]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[HasVacation]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[AbsentHoursValue]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[LateHoursValue]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[MissionValue]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[VacationValue]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[HolidayOvertimeHoursValue]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[WorkHoursValue]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[RequiredWorkHours]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[IsCalculated]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[OvertimeHoursValue]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[LateType]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[AbsenseType]" />
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[day]">
									<Relationship Name="ExpressionDependencies">
										<Entry />
									</Relationship>
								</Element>
							</Entry>
							<Entry>
								<Element Type="SqlComputedColumn" Name="[dbo].[UpdateDailyRecordsFromAttendance].[#detailsTmp].[status]" />
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Parameters">
				<Entry>
					<Element Type="SqlSubroutineParameter" Name="[dbo].[UpdateDailyRecordsFromAttendance].[@attendanceRecordId]">
						<Relationship Name="Type">
							<Entry>
								<Element Type="SqlTypeSpecifier">
									<Relationship Name="Type">
										<Entry>
											<References ExternalSource="BuiltIns" Name="[int]" />
										</Entry>
									</Relationship>
								</Element>
							</Entry>
						</Relationship>
					</Element>
				</Entry>
			</Relationship>
			<Relationship Name="Schema">
				<Entry>
					<References ExternalSource="BuiltIns" Name="[dbo]" />
				</Entry>
			</Relationship>
			<Annotation Type="SysCommentsObjectAnnotation">
				<Property Name="Length" Value="6248" />
				<Property Name="StartLine" Value="1" />
				<Property Name="StartColumn" Value="1" />
				<Property Name="HeaderContents" Value="CREATE PROCEDURE UpdateDailyRecordsFromAttendance(&#xD;&#xA;@attendanceRecordId int&#xD;&#xA;)&#xD;&#xA;AS" />
			</Annotation>
		</Element>
	</Model>
</DataSchemaModel>